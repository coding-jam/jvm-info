version: '3.7'

services:
    jvm-info:
      image: cnj/openjdk-jvm-info
      ports:
        - "8080:8080"
      environment:
        # https://blogs.oracle.com/java-platform-group/java-se-support-for-docker-cpu-and-memory-limits
        # https://developers.redhat.com/blog/2017/04/04/openjdk-and-containers/
        # https://developers.redhat.com/blog/2017/03/14/java-inside-docker/
        # https://www.slideshare.net/RedHatDevelopers/why-youre-going-to-fail-running-java-on-docker
        # https://bugs.java.com/view_bug.do?bug_id=6515172
        # https://bugs.openjdk.java.net/browse/JDK-6515172
        # -XX:+UseSerialGC se cpu=1
        # -Xms512m -Xmx512m si deducono da -XX:MinRAMFraction=2 e -XX:MaxRAMFraction=2 rispetto ai limiti imposti al container (1024/2)
        JAVA_OPTS: >
          -XX:+PrintFlagsFinal
          -XX:+PrintGCDetails
          -XX:+UnlockExperimentalVMOptions
          -XX:+UseCGroupMemoryLimitForHeap
          -XX:InitialRAMFraction=2
          -XX:MaxRAMFraction=2
          -XX:ParallelGCThreads=3
          -XX:ConcGCThreads=3
          -XX:CICompilerCount=2
          -Djava.util.concurrent.ForkJoinPool.common.parallelism=3
          -XX:+ExitOnOutOfMemoryError
      deploy:
        resources:
          limits:
            memory: 1024M # dovrebbe essere il doppio della Xmx
            cpus: '3'